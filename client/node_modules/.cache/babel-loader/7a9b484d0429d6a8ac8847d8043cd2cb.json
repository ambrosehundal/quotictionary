{"ast":null,"code":"var _jsxFileName = \"/Users/ambrose/Desktop/quotictionary/client/src/components/quoteform.js\";\nimport React, { useState, useEffect } from 'react';\n\nconst QuoteForm = () => {\n  const [quote, setQuote] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n\n  const handleSubmit = evt => {\n    fetch('api/quotes', {\n      method: 'POST',\n      body: JSON.stringify(category, quote)\n    }).then(function (response) {\n      console.log(response);\n      return response.json();\n    });\n    evt.preventDefault();\n    console.log(quote);\n    console.log(category);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Select a category:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: e => setCategory(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Enter your witty quote:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: e => setQuote(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default QuoteForm;","map":{"version":3,"sources":["/Users/ambrose/Desktop/quotictionary/client/src/components/quoteform.js"],"names":["React","useState","useEffect","QuoteForm","quote","setQuote","category","setCategory","handleSubmit","evt","fetch","method","body","JSON","stringify","then","response","console","log","json","preventDefault","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAGA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMO,YAAY,GAAIC,GAAD,IAAS;AAE1BC,IAAAA,KAAK,CAAC,YAAD,EAAe;AAChBC,MAAAA,MAAM,EAAE,MADQ;AAEhBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,QAAf,EAAyBF,KAAzB;AAFU,KAAf,CAAL,CAE4CW,IAF5C,CAEiD,UAASC,QAAT,EAAkB;AAC3DC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,aAAOA,QAAQ,CAACG,IAAT,EAAP;AACH,KALL;AAMAV,IAAAA,GAAG,CAACW,cAAJ;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;AACH,GAXD;;AAcA,sBACI;AAAM,IAAA,QAAQ,EAAEE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAEa,CAAC,IAAId,WAAW,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFA,eAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAEF,CAAC,IAAIhB,QAAQ,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAPA,eAeA;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfA,CADJ;AAyBH,CA5CD;;AA+CA,eAAepB,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\n\n\nconst QuoteForm = () => {\n    const [quote, setQuote] = useState(\"\")\n\n    const [category, setCategory] = useState(\"\")\n\n    const handleSubmit = (evt) => {\n\n        fetch('api/quotes', {\n            method: 'POST',\n            body: JSON.stringify(category, quote)}).then(function(response){\n                console.log(response)\n                return response.json();\n            });\n        evt.preventDefault();\n        console.log(quote);\n        console.log(category);\n    } \n\n\n    return (\n        <form onSubmit={handleSubmit}>\n\n        <p>\n            Select a category:\n            <input type=\"text\" onChange={e => setCategory(e.target.value)}/>\n        </p>\n\n        <label>\n            Enter your witty quote: \n            <input type=\"text\" onChange={e => setQuote(e.target.value)}/>\n        </label>\n\n        \n        \n        \n        <input type=\"submit\" value=\"Submit\" />\n        \n        \n        </form>\n\n\n\n\n    )\n}\n\n\nexport default QuoteForm;\n\n"]},"metadata":{},"sourceType":"module"}